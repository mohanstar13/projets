<!DOCTYPE html>
<html>
<head>

 <script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<link rel="stylesheet"
	href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
	<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>  
  

<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
	
<title>EOD</title>




<script type="text/javascript" src="new.js"></script>
<script type="text/javascript" src="test.js"></script>
<script type="text/javascript" src="script3.js"></script>
<script>
	$(function() {
		$("#datepicker").datepicker();
	});
	
</script>
<style type="text/css">
@media (min-width: 1200px) {
  .container {
    width: 1300px;
  }
}
body {background-color: #000099;}
.container{background-color:white;}
</style>  

</head>
<body>


<form id="bookForm" method="post" action="ActionServlet"  class="form-horizontal">
<div class="container text-primary">
 <center><h1>Level-1 EOD</h1></center>
	<div class="row">
				<div class="col-xs-2">
					<label for="name">Name:</label> 
					<select class="code form-control" id="name" name="name" >
                    </select>
					 <label for="Date">Date:</label> 
				<input type="text"
						class="code form-control" id="datepicker" name="date">
						
						 <label
						for="Shift">Shift:</label> <select class="code form-control"
						id="shift" name="shift">
						<option value="Shift 1">Shift 1</option>
						<option value="Shift 2">Shift 2</option>
						<option value="Shift 3">Shift 3</option>
					</select>
				</div>
			</div>
		<br>	
    <div class="form-group">
    <div class="row">
    <div class="col-xs-1">Incident</div><div class="col-xs-1">Defect</div><div class="col-xs-1">Defect Title</div>
    <div class="col-xs-1">Status</div><div class="col-xs-1">KI ID</div><div class="col-xs-1">Open Time</div>
    <div class="col-xs-1">Reassignment time</div><div class="col-xs-1">Handle Time</div><div class="col-xs-1">Priority</div>
      <div class="col-xs-1">Reason for delay</div><div class="col-xs-1">Which DC</div>
      
      </div><div class="col-xs-1">
            <input type="text" class="form-control" id="inc0"
							name="inc[0]">
        </div>
        <div class="col-xs-1">
            <input type="text" class="form-control" id="defect0"
							name="defect[0]">
        </div>
         <div class="col-xs-1">
         <input type="text" class="form-control" id="dtitle0"
							name="dtitle[0]">
         </div>
          <div class="col-xs-1">
          <select class="form-control" id="istatus0"
							name="istatus[0]">
								<option value="Work in Progress">Work in Progress</option>
								<option value="Closed">Closed</option>
						</select>
         </div>
          <div class="col-xs-1">
          <input type="text" class="form-control" id="kid0"
							name="kid[0]">
         </div>
          <div class="col-xs-1">
          <input type="text" class="form-control" id="otime0"
							name="otime[0]">
         </div>
          <div class="col-xs-1">
          <input type="text" class="form-control" id="ctime0"
							 name="htime[0]" onblur="diff(0)" >
         </div>
          <div class="col-xs-1">
          <input type="text" class="form-control" id="htime0"
							name="ctime[0]" disabled>
         </div>
          <div class="col-xs-1">
          <select class="form-control" id="pri0" name="pri[0]">
								<option value="Average">Average</option>
								<option value="High">High</option>
								<option value="Low">Low</option>
						</select>
         </div>
          <div class="col-xs-1">
          <select class="form-control" id="delay0"
							name="delay[0]">
								<option value="Worked with Level 2">Worked with Level 2</option>
								<option value="Within Escalation window">Within
									Escalation window</option>
								<option value="Waiting on RT">Waiting on RT</option>
						</select>
         </div>
          <div class="col-xs-1">
          <select class="form-control" id="dc0" name="dc[0]">
								<option value="DC8">DC8</option>
								<option value="DC8">DC8</option>
								<option value="DC8">DC8</option>
						</select>
         </div>
          
        <div class="col-xs-1">
            <button type="button" class="btn btn-default addButton">Add</button>
        </div>
    </div>

    <!-- The template for adding new field -->
    <div class="form-group hide" id="bookTemplate">
     <div class="col-xs-1">
            <input type="text" class="code form-control" 
							name="inc">
        </div>
        <div class="col-xs-1">
            <input type="text" class="code form-control" 
							name="defect">
        </div>
         <div class="col-xs-1">
         <input type="text" class="code form-control" 
							name="dtitle">
         </div>
          <div class="col-xs-1">
          <select class="code form-control" 
							name="istatus">
								<option value="Work in Progress">Work in Progress</option>
								<option value="Closed">Closed</option>
						</select>
         </div>
          <div class="col-xs-1">
          <input type="text" class="form-control" 
							name="kid">
         </div>
          <div class="col-xs-1">
          <input type="text" class="code form-control" 
							name="otime">
         </div>
          <div class="col-xs-1">
          <input type="text" class="code form-control" 
							 name="htime" onblur="diff(0)" >
         </div>
          <div class="col-xs-1">
          <input type="text" class="code form-control" 
							name="ctime" disabled>
         </div>
          <div class="col-xs-1">
          <select class="code form-control"  name="pri">
								<option value="Average">Average</option>
								<option value="High">High</option>
								<option value="Low">Low</option>
						</select>
         </div>
          <div class="col-xs-1">
          <select class="code form-control" 
							name="delay">
								<option value="Worked with Level 2">Worked with Level 2</option>
								<option value="Within Escalation window">Within
									Escalation window</option>
								<option value="Waiting on RT">Waiting on RT</option>
						</select>
         </div>
          <div class="col-xs-1">
          <select class="code form-control"  name="dc">
								<option value="DC8">DC8</option>
								<option value="DC8">DC8</option>
								<option value="DC8">DC8</option>
						</select>
         </div>
        <div class="col-xs-1">
            <button type="button" class="btn btn-default removeButton">Remove</button>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-5 col-xs-offset-1">
            <button type="submit" class="btn btn-default">Submit</button>
        </div>
    </div>
    </div>
</form>


</body>
</html>
///////////////////
$(document).ready(function() {
	
    var incValidators = {
    		
    		row: '.col-xs-1',   // The title is placed inside a <div class="col-xs-4"> element
            trigger: 'blur',
            validators: {
                notEmpty: {
                    message: 'The incident is required'
                },
    stringLength: {
        min: 6,
        max: 10,
        message: 'The incident must be more than 6 and less than 10 characters long'
    }
 
            }
        },
       defectValidators = {
            row: '.col-xs-1',
            trigger: 'blur',
            validators: {
                notEmpty: {
                    message: 'The defect is required'
                },
    numeric: {
        message: 'The defects must be a numeric number'
    }
            }
        },
        titleValidators = {
            row: '.col-xs-1',
            trigger: 'blur',
            validators: {
                notEmpty: {
                    message: 'The defect title is required'
                }
            }
        },
        istatusValidators = {
                row: '.col-xs-1',
                trigger: 'blur',
                validators: {
                    notEmpty: {
                        message: 'The Status is required'
                    }
                }
            },
       otimeValidators = {
                    row: '.col-xs-1',
                    trigger: 'blur',
                    validators: {
                        notEmpty: {
                            message: 'The open time is required'
                        }
                    }
                },
      priValidators = {
                        row: '.col-xs-1',
                        trigger: 'blur',
                        validators: {
                            notEmpty: {
                                message: 'The Priority  is required'
                            }
                        }
                    },
                    delayValidators = {
                            row: '.col-xs-1',
                            trigger: 'blur',
                            validators: {
                                notEmpty: {
                                    message: 'The delay time is required'
                                }
                            }
                        },
                   dcValidators = {
                                row: '.col-xs-1',
                                trigger: 'blur',
                                validators: {
                                    notEmpty: {
                                        message: 'The dc time is required'
                                    }
                                }
                            },
        bookIndex = 0;

    $('#bookForm')
        .formValidation({
            framework: 'bootstrap',
            
            icon: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            err: {
                // You can set it to popover
                // The message then will be shown in Bootstrap popover
                container: 'tooltip'
            },
         
            fields: {
            	
            	name: {
            		row: '.col-xs-2',
                     validators: {
                         notEmpty: {
                             message: 'The name required and cannot be empty'
                         }
                     }
                 },
                 date: {
                	 row: '.col-xs-2',
                     validators: {
                         notEmpty: {
                             message: 'The date required and cannot be empty'
                         }
                     }
                 },
                 shift: {
                	 row: '.col-xs-2',
                     validators: {
                         notEmpty: {
                             message: 'The shift required and cannot be empty'
                         }
                     }
                 },
                'inc[0]': incValidators,
                'defect[0]':defectValidators,
                'dtitle[0]': titleValidators,
                'istatus[0]': istatusValidators,
                'otime[0]': otimeValidators,
                'pri[0]': priValidators,
                'delay[0]': delayValidators,
                'dc[0]': dcValidators                
            }
        })

        // Add button click handler
        .on('click', '.addButton', function() {
            bookIndex++;
            var $template = $('#bookTemplate'),
                $clone    = $template
                                .clone()
                                .removeClass('hide')
                                .removeAttr('id')
                                .attr('data-book-index', bookIndex)
                                .insertBefore($template);

            // Update the name attributes
            $clone
                .find('[name="inc"]').attr({name: 'inc[' + bookIndex + ']',id: 'inc' + bookIndex + ''}).end()
                .find('[name="defect"]').attr({name: 'defect[' + bookIndex + ']',id: 'defect' + bookIndex + ''}).end()
                .find('[name="dtitle"]').attr({name:'dtitle[' + bookIndex + ']',id: 'dtitle' + bookIndex + ''}).end()
            .find('[name="istatus"]').attr({name:'istatus[' + bookIndex + ']',id: 'istatus' + bookIndex + ''}).end()
            .find('[name="kid"]').attr({name:'kid[' + bookIndex + ']',id: 'kid' + bookIndex + ''}).end()
            .find('[name="otime"]').attr({name:'otime[' + bookIndex + ']',id: 'otime' + bookIndex + ''}).end()
            .find('[name="htime"]').attr({name:'htime[' + bookIndex + ']',id: 'htime' + bookIndex + ''}).end()
            .find('[name="ctime"]').attr({name:'ctime[' + bookIndex + ']',id: 'ctime' + bookIndex + ''}).end()
            .find('[name="pri"]').attr({name:'pri[' + bookIndex + ']',id: 'pri' + bookIndex + ''}).end()
            .find('[name="delay"]').attr({name:'delay[' + bookIndex + ']',id: 'delay' + bookIndex + ''}).end()
            .find('[name="dc"]').attr({name:'dc[' + bookIndex + ']',id: 'dc' + bookIndex + ''}).end();

            // Add new fields
            // Note that we also pass the validator rules for new field as the third parameter
            $('#bookForm')
                .formValidation('addField', 'inc[' + bookIndex + ']', incValidators)
                .formValidation('addField', 'defect[' + bookIndex + ']',defectValidators)
                .formValidation('addField', 'dtitle[' + bookIndex + ']', titleValidators)
            .formValidation('addField', 'istatus[' + bookIndex + ']', istatusValidators)
            .formValidation('addField', 'otime[' + bookIndex + ']', otimeValidators)
            .formValidation('addField', 'pri[' + bookIndex + ']', priValidators)
            .formValidation('addField', 'delay[' + bookIndex + ']', delayValidators)
            .formValidation('addField', 'dc[' + bookIndex + ']', dcValidators);
            
        })
       
        // Remove button click handler
        .on('click', '.removeButton', function() {
            var $row  = $(this).parents('.form-group'),
                index = $row.attr('data-book-index');

            // Remove fields
            $('#bookForm')
                .formValidation('removeField', $row.find('[name="inc[' + index + ']"]'))
                .formValidation('removeField', $row.find('[name="defect[' + index + ']"]'))
                .formValidation('removeField', $row.find('[name="dtitle[' + index + ']"]'))
            .formValidation('removeField', $row.find('[name="istatus[' + index + ']"]'))
            .formValidation('removeField', $row.find('[name="otime[' + index + ']"]'))
            .formValidation('removeField', $row.find('[name="pri[' + index + ']"]'))
            .formValidation('removeField', $row.find('[name="delay[' + index + ']"]'))
            .formValidation('removeField', $row.find('[name="dc[' + index + ']"]'));

            // Remove element containing the fields
            $row.remove();
        });
});


